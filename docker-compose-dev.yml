version: '3.6'
services:
  keycloak:
    container_name: keycloak    
    # command: ["-Djboss.http.port=8180"]
    ports:
      - '8180:8080'
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=h2
      - KEYCLOAK_IMPORT=/resources/ClientFhirServerRealm.json
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone/data/
      - '../test-ehr/src/main/resources/ClientFhirServerRealm.json:/resources/ClientFhirServerRealm.json'
    image: hkong2/keycloak

  # Create crd container
  test-ehr: # Name of our service
    container_name: pas_dev_test-ehr
    ports: # Port binding to host from docker container
      - '8080:8080' # Bind port 3000 of host to 3000 of container
    environment:
      - DOCKER_PROFILE=true
    build: 
      context: ../test-ehr
      dockerfile: Dockerfile.dev 
    volumes:
      - pas_dev_test-ehr-sync:/test-ehr:nocopy #  nocopy is important
      - /test-ehr/.gradle
      - /test-ehr/build
      - /test-ehr/target
      - /test-ehr/logs


  # Create crd container
  crd: # Name of our service
    build: 
      context: ../CRD
      dockerfile: Dockerfile.dev 
    container_name: pas_dev_crd
    ports: # Port binding to host from docker container
      - "8090:8090" # Bind port 3000 of host to 3000 of container
    environment:
      VSAC_API_KEY: ${VSAC_API_KEY}
    volumes:
      - pas_dev_crd-sync:/CRD:nocopy #  nocopy is important
      - /CRD/logs
      - /CRD/.gradle
      - /CRD/server/.gradle
      - /CRD/server/build
      - /CRD/server/ValueSetCache
      - /CRD/operations/build
      - /CRD/resources/build

  # Create crd container
  crd-request-generator: # Name of our service
    build: 
      context: ../crd-request-generator
      dockerfile: Dockerfile.dev 
    container_name: pas_dev_crd-request-generator
    ports: # Port binding to host from docker container
      - "3000:3000" # Bind port 3000 of host to 3000 of container
      - "3001:3001"
    volumes:
      - pas_dev_crd-request-generator-sync:/home/node/app:nocopy #  nocopy is important
      - /home/node/app/node_modules
      - /home/node/app/databaseData
      - /home/node/app/build
      - /home/node/app/logs


  # Create crd container
  dtr: # Name of our service
    build: 
      context: ../dtr
      dockerfile: Dockerfile.dev     
    container_name: pas_dev_dtr
    ports: # Port binding to host from docker container
      - "3005:3005" # Bind port 3000 of host to 3000 of container
    volumes:
      - pas_dev_dtr-sync:/home/node/app:nocopy #  nocopy is important
      - /home/node/app/node_modules
      - /home/node/app/databaseData
      - /home/node/app/logs

  # # Create fhir-x12 converter container
  # fhir-x12: # Name of our service
  #   build: 
  #     context: ../fhir-x12
  #     dockerfile: Dockerfile.dev     
  #   container_name: pas_dev_fhir-x12
  #   ports: # Port binding to host from docker container
  #     - "8086:8086" # Bind port 3000 of host to 3000 of container
  #   volumes:
  #     - pas_dev_fhir-x12-sync:/usr/src/app/fhir-x12:nocopy #  nocopy is important
  #     - /usr/src/app/fhir-x12/node_modules
  #     - /usr/src/app/fhir-x12/build
  #     - /usr/src/app/fhir-x12/databaseData
  #     - /usr/src/app/fhir-x12/logs
  #   environment:
  #     PORT: 8086
  #     ADMIN_TOKEN: fhir-x12-secret


  # # Create frontend fhir-x12 frontend converter container
  # fhir-x12-frontend: # Name of our service
  #   build: 
  #     context: ../fhir-x12-frontend
  #     dockerfile: Dockerfile.dev 
  #   container_name: pas_dev_fhir-x12-frontend
  #   ports: # Port binding to host from docker container
  #     - "3015:3015" # Bind port 3000 of host to 3000 of container
  #   volumes:
  #     - pas_dev_fhir-x12-frontend-sync:/usr/src/app/fhir-x12-frontend:nocopy #  nocopy is important
  #     - /usr/src/app/fhir-x12-frontend/node_modules
  #     - /usr/src/app/fhir-x12=frontend/build
  #     - /usr/src/app/fhir-x12=frontend/logs
  #   environment:
  #     PORT: 3015
  #     ADMIN_TOKEN: fhir-x12-secret
  #     BACKEND_URL: http://localhost:8086/

  # Create crd container
  prior-auth: # Name of our service
    build: 
      context: '.'
      dockerfile: Dockerfile.dev     
    container_name: pas_dev_prior-auth
    environment:
      - TOKEN_BASE_URI=http://localhost:9015
    ports: # Port binding to host from docker container
      - "9015:9015" # Bind port 3000 of host to 3000 of container
    volumes:
      - pas_dev_prior-auth-sync:/prior-auth:nocopy #  nocopy is important
      - /prior-auth/.gradle
      - /prior-auth/databaseData
      - /prior-auth/build
      - /prior-auth/logs

  # Create crd container
  prior-auth-client: # Name of our service
    build: 
      context: '../prior-auth-client'
      dockerfile: Dockerfile.dev     
    container_name: pas_dev_prior-auth-client
    ports: # Port binding to host from docker container
      - "9090:9090" # Bind port 3000 of host to 3000 of container
    volumes:
      - pas_dev_prior-auth-sync:/prior-auth:nocopy #  nocopy is important
      - /prior-auth-client/.gradle
      - /prior-auth-client/build
      - /prior-auth-client/logs


volumes:
  keycloak-data:
  pas_dev_test-ehr-sync:
    external: true
  pas_dev_crd-sync:
    external: true
  pas_dev_crd-request-generator-sync:
    external: true
  pas_dev_dtr-sync:
    external: true
  pas_dev_prior-auth-sync:
    external: true
  pas_dev_prior-auth-client-sync:
    external: true
  # pas_dev_fhir-x12-sync:
  #   external: true
  # pas_dev_fhir-x12-frontend-sync:
  #   external: true